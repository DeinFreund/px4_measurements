log01:
sawtooth curve
p = {500, 1000, 500, 1000, 500, 1000}
i = {0, 0, 10, 10, 100, 100}
d = {0,0,0,0,0,0}
log02:
constant output
p = {1000, 1000, 1000, 1000, 1000, 1000}
i = {0, 10, 100, 500, 1000, 5000}
d = {0,0,0,0,0,0}
log03:
sine 60 deg
p = {1000, 1000, 1000, 1000, 1000, 1000}
i = {0, 10, 100, 500, 1000, 5000}
d = {0,0,0,0,0,0}
log04:
p = {1000, 1000, 1000, 1000, 1000, 1000};
i = {1000, 1000, 1000, 1000, 1000, 1000};
d = {0, 10,  100,  500,   1000,   5000};
log05:
p = {1000, 1000, 1000, 1000, 1000, 1000};
i = {1000, 1000, 1000, 1000, 1000, 1000};
d = {0, 10,  100,  500,   1000,   5000};
log06:
aborted after sine
  uint16_t position_p_gain[] = {500, 1000, 2000, 4000, 8000, 16000};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {5000, 5000, 5000, 5000, 5000, 5000};
log07:

  uint16_t position_p_gain[] = {2000, 2000, 2000, 2000, 2000, 2000};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {5000, 5000, 5000, 5000, 5000, 5000};
log08:

  uint16_t position_p_gain[] = {1000, 1000, 1000, 2000, 2000, 2000};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {5000, 10000, 15000, 5000, 10000, 15000};

log09
//deleted
equal jittering for all p settings
  uint16_t position_p_gain[] = {800, 1000, 1200, 1400, 1600, 1800};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {5000, 5000, 5000, 5000, 5000, 5000};
log09


  uint16_t position_p_gain[] = {1200, 1200, 1200, 1200, 1200, 1200};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {1000, 1000, 2000, 3000, 4000, 5000};
log10:


  uint16_t position_p_gain[] = {1200, 1200, 1200, 1200, 1200, 1200};
  uint16_t position_i_gain[] = {1000, 1000, 1000, 1000, 1000, 1000};
  uint16_t position_d_gain[] = {500, 500, 500, 500, 500, 500};

log11:
//overwritten
//delay old: ~50ms
//delay new: ~35ms
//new gets error to zero
  uint16_t position_p_gain[] = {0, 0, 800, 800, 1200, 1200};
  uint16_t position_i_gain[] = {0,0,0,0, 1000, 1000};
  uint16_t position_d_gain[] = {0,0,0,0, 500, 500};

log11:
  uint16_t position_p_gain[] = {0, 0, 800, 800, 1200, 1200};
  uint16_t position_i_gain[] = {0,0,0,0, 1000, 1000};
  uint16_t position_d_gain[] = {0,0,0,0, 500, 500};

log12:
  uint16_t position_p_gain[] = {0, 0, 800, 800, 1200, 1200};
  uint16_t position_i_gain[] = {0,0,0,0, 1000, 1000};
  uint16_t position_d_gain[] = {0,0,0,0, 500, 500};

log13
  uint16_t position_p_gain[] = {0, 0, 800, 800, 1200, 1200};
  uint16_t position_i_gain[] = {0,0,0,0, 1000, 1000};
  uint16_t position_d_gain[] = {0,0,0,0, 500, 500};
